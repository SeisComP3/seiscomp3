# Default plugins to load. Application specific configuration
# files should use the 'plugins' entry to specify additional
# plugins otherwise when using 'core.plugins' also these
# default values are going to be overwritten.
#
# To be able to read from all supported databases all available
# database plugins are loaded as 'core'.
# All currently supported db backends: dbmysql, dbpostgresql, dbsqlite3
core.plugins = dbmysql

# Use log level 2 (error and warning)
logging {

	level = 2

	# Use logfiles. It is commented by default to allow applications to define
	# console output with their hard coded defaults. If this setting is enabled
	# it would otherwise always override the applications default logging
	# backend.
	#file = true

	# Rotate the logfiles
	file {
		rotator = true

		# Rotate each 86400 seconds (1 day)
		rotator.timeSpan = 86400

		# Keep 7 rotated log files
		rotator.archiveSize = 7
	}

}

# Server connection
connection.server = localhost

# The connection timeout
connection.timeout = 3

# How to transfer messages (binary, xml)?
connection.encoding = binary


#-------------------------------------------------------------------------------
# Note that 'recordstream.service' and 'recordstream.source'
# are deprecated. Please replace them with their short form
#
#recordstream = slink://localhost:18000
#
# We keep the old default configuration for backward compatibility to not break
# existing configurations but we encourage you to use the new parameter from
# now on.
#-------------------------------------------------------------------------------

# Use slink (seedlink) as record source service.
recordstream.service = slink

# Connect to local seedlink server via port 18000.
recordstream.source = localhost:18000


# The agencyID to use when tagging processing results
agencyID = GFZ

# Organization name used mainly by ArcLink and SeedLink.
organization = Unset

# Configures the default filters selectable in manual picker.
# The entry with a leading "@" is selected as default filter.
picker.filters = \
     "BP 0.1 - 1 Hz  3rd order;BW(3,0.1,1)", \
     "BP 0.1 - 2 Hz  3rd order;BW(3,0.1,2)", \
     "BP 0.4 - 1 Hz  3rd order;BW(3,0.4,1)", \
    "@BP 0.7 - 2 Hz  3rd order;BW(3,0.7,2)", \
     "BP 1 - 3 Hz  3rd order;BW(3,1.0,3)", \
     "BP 2 - 4 Hz  3rd order;BW(3,2.0,4)", \
     "BP 3 - 6 Hz  3rd order;BW(3,3.0,6)", \
     "BP 4 - 8 Hz  3rd order;BW(3,4.0,8)", \
     "BP 1 - 5 Hz  3rd order;BW(3,1.0,5)", \
     "BP 0.7 - 2 Hz + STA/LTA(1,50);RMHP(10)->ITAPER(30)->BW(3,0.7,2)->STALTA(1,50)"

# Configure the columns of the event list that are visible initially.
# The first column containing the origin time is always visible and cannot
# be hidden.
# Possible values are:
#  * Type
#  * M
#  * MType
#  * Phases
#  * Lat
#  * Lon
#  * Depth
#  * Stat
#  * Agency
#  * Region
#  * ID
eventlist.visibleColumns = M, MType, Phases, Lat, Lon, Depth, Stat, Agency, Region, ID

# Default travel time table configuration. Plugins can be added to for custom
# travel time table implementations.
# This configuration can be used by applications that need to know which
# interfaces are activated and which tables they define.
ttt {

	libtau.tables = iasp91, ak135
	LOCSAT.tables = iasp91, tab

}
