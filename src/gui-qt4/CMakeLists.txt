SC_BEGIN_PACKAGE(GUI)

SET(CPACK_PACKAGE_EXECUTABLES "scrttv;scrttv" "scmv;scmv" "scolv;scolv" "scesv;scesv")

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/libs)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/libs)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../system/libs)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/../system/libs)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../trunk/libs)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/../trunk/libs)

IF (SC_GLOBAL_GUI)
	SET(Boost_DETAILED_FAILURE_MSG ON)
	FIND_PACKAGE(Boost REQUIRED COMPONENTS program_options thread filesystem iostreams regex)
	IF (WIN32)
		ADD_DEFINITIONS("-DBOOST_ALL_NO_LIB")
		ADD_DEFINITIONS("-DBOOST_LIB_DIAGNOSTIC")
	ENDIF (WIN32)

	LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
	INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

	IF (SC_GLOBAL_GUI_QT5)
		FIND_PACKAGE(Qt5 REQUIRED COMPONENTS Xml)
		INCLUDE_DIRECTORIES(${Qt5Core_INCLUDE_DIRS})
		INCLUDE_DIRECTORIES(${Qt5Widgets_INCLUDE_DIRS})
		INCLUDE_DIRECTORIES(${Qt5Xml_INCLUDE_DIRS})
	ELSE()
		FIND_PACKAGE(Qt4 REQUIRED)
		INCLUDE_DIRECTORIES(${QT_QTCORE_INCLUDE_DIR})
		INCLUDE_DIRECTORIES(${QT_QTGUI_INCLUDE_DIR})
		INCLUDE_DIRECTORIES(${QT_QTXML_INCLUDE_DIR})
	ENDIF()

	FIND_PACKAGE(OpenSSL REQUIRED)

	SET(SC_LICENSE_LIB ${CMAKE_CURRENT_SOURCE_DIR}/license.cpp)
	INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
	INCLUDE_DIRECTORIES(${OPENSSL_INCLUDE_DIR})

	#SUBDIRS(libs apps test)
	SUBDIRS(libs apps)
ENDIF (SC_GLOBAL_GUI)
