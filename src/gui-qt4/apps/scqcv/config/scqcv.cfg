# Join to the Qc group
connection.primaryGroup = QC

# Receive objects from Qc group and also Config Messages
connection.subscriptions = QC, CONFIG

# StreamWidget: display n seconds [s]
streamWidget.length = 600

# display QcParameter for this streamID`s
# default = use configured streams
# wildcard = use only the matching streams (NET.STA.LOC.CHA)
streams.codes = default
# streams.codes = GE.*.*.BHZ

# add new streams from WfQ automatically
streams.cumulative = false

# display this QcParameter
# --> default column order in QcTableView
# @ string:string [qc-parameter-name : config-name]
parameter = 	"latency           : latency",\
				"delay             : delay",\
				"timing quality    : timing",\
				"offset            : offset",\
				"rms               : rms",\
				"gaps count        : gap",\
				"overlaps count    : overlap",\
				"availability      : availability",\
				"spikes count      : spike"

#				"gaps interval     : gap",\
#				"gaps length       : gap",\
#				"spikes interval   : spike",\
#				"spikes amplitude  : spike"
#				"overlaps interval : gap",\
#				"overlaps length   : gap",\

# define  ranges and colors
# range: bad
range.bad = -99.9E99, 99.0E99
range.bad.count = -1
range.bad.color = red
# range: sane
range.sane = 0.0, 99.0E99
range.sane.count = 0
range.sane.color = green


# set defaults
default.expire = 0
default.ranges = bad, sane
default.useAbsoluteValue = false
default.format = float
default.color = grey1

# QcParameter specific configuraion
#
latency.range.sane = 0.0, 600.0
latency.range.bad.color = grey
latency.range.bad.count = -1000
latency.format = timeSpan
#
delay.range.sane = 0.0, 60.0
delay.range.bad.color = darkred
delay.range.bad.count = -500
delay.format = timeSpan
#
timing.ranges = bad, inter, sane
timing.range.inter = 50.0, 90.0
timing.range.inter.count = -1
timing.range.inter.color = yellow
timing.range.sane = 90.0, 100.0
timing.format = int
#
offset.useAbsoluteValue = true
offset.range.sane = 0.0, 500.E3
#
rms.range.sane = 10.0, 20.E3
#
spike.range.sane = 0.0, 0.0
spike.expire = 600
#
gap.range.sane = 0.0, 0.0
gap.expire = 600
#gap.format = int
#
availability.range.sane = 99.0, 101.0
availability.expire = 600
availability.format = percent


# score
score.default.ranges = latency, delay, below, r10, r09, r08, r07, r06, r05, r04, r03, r02, r01, above, unset


# define cumulative status ranges
range.latency = -1900, -1000
range.latency.color = grey
#
range.delay = -600, -500
range.delay.color = darkred
#
range.below = -99, -11
range.below.color = grey
range.below.action = disableStream
#
range.r10 = -10, -10
range.r10.color = red10
#
range.r09 = -9, -9
range.r09.color = red09
#
range.r08 = -8, -8
range.r08.color = red08
#
range.r07 = -7, -7
range.r07.color = red07
#
range.r06 = -6, -6
range.r06.color = red06
#
range.r05 = -5, -5
range.r05.color = red05
#
range.r04 = -4, -4
range.r04.color = red04
#
range.r03 = -3, -3
range.r03.color = red03
#
range.r02 = -2, -2
range.r02.color = red02
#
range.r01 = -1, -1
range.r01.color = red01
#
range.above = 0, 999
range.above.color = green
range.above.action = enableStream
#
range.unset = 1000, 1000
range.unset.color = grey1
#

# define colors
color.red = 	255, 000, 000, 64
color.yellow = 	255, 255, 000, 64
color.green = 	000, 255, 000, 100
color.grey = 	130, 130, 130, 255
color.grey1 = 	240, 240, 240, 255
color.darkred = 255, 000, 000, 196
#
color.red10 = 	255, 000, 000, 255
color.red09 = 	255, 000, 000, 240
color.red08 = 	255, 000, 000, 220
color.red07 = 	255, 000, 000, 200
color.red06 = 	255, 000, 000, 175
color.red05 = 	255, 000, 000, 150
color.red04 = 	255, 000, 000, 125
color.red03 = 	255, 000, 000, 100
color.red02 = 	255, 000, 000, 85
color.red01 = 	255, 000, 000, 70

# valid formats are:
format.float = ""
format.timeSpan = ""
format.int = ""
format.percent = ""

