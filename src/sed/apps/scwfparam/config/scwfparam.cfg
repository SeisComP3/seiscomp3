# Defines the white- and blacklist of data streams to be used.
# The rules to decide if a stream is used or not are the following:
# 1. if whitelist is not empty and the stream is not on the whitelist,
#    don't use it, ok otherwise
# 2. if blacklist is not empty and the stream is on the blacklist,
#    don't use it, ok otherwise
# Both checks are made and combined with AND.
# Either whitelist or blacklist contains a list of patterns (wildcard allowed
# as * and ?), eg GE.*.*.*, *, GE.MORC.*.BH?
# Each stream id (NET.STA.LOC.CHA) will be checked against the defined patterns
wfparam.streams.whitelist = ""
wfparam.streams.blacklist = ""

# Default value of total time window length in seconds
# if wfparam.magnitudeTimeWindowTable is not specified.
# This times window includes wfparam.preEventWindowLength.
wfparam.totalTimeWindowLength = 360

# Magnitude dependent time window table. The format is
# "mag1:secs1, mag2:secs2, mag3:secs3".
# If a magnitude falls between two configured magnitudes the time window
# of the lower magnitude is then used. No interpolation takes place.
# Magnitude outside the configured range are clipped to the lowest/highest
# value.
#wfparam.magnitudeTimeWindowTable = ""

# The pre event time window length in seconds.
wfparam.preEventWindowLength = 60

# Analogue to wfparam.magnitudeTimeWindowTable but instead giving a time
# window, the distance in km is specified.
#wfparam.magnitudeDistanceTable = ""

# The maximum epicentral distance in km of a station being considered for
# processing. This value is used if wfparam.magnitudeDistanceTable is not
# specified.
wfparam.maximumEpicentralDistance = 400

# Relative saturation threshold in percent. If the absolute raw amplitude
# exceeds X% of 2**23 counts the station will be excluded from processing.
wfparam.saturationThreshold = 80

# Specifies the STA length in seconds of the applied STA/LTA check.
wfparam.STAlength = 1

# Specifies the LTA length in seconds of the applied STA/LTA check.
wfparam.LTAlength = 60

# Specifies the minimum STALTA ratio to be reached to further process a station.
wfparam.STALTAratio = 3

# Specifies the number of seconds around P to be used to check the STA/LTA ratio
wfparam.STALTAmargin = 5

# Defines the factor applied to the signigicant duration to define the
# processing spetra time window. If that value is <= 0 the totalTimeWindowLength
# is used.
wfparam.durationScale = 1.5

# Specifies a list of damping values for computation of the relative
# displacement elastic response spectrum in percent.
wfparam.dampings = 5

# Specifies the number of natural periods for computation of the relative
# displacement elastic response spectrum between Tmin and Tmax.
wfparam.naturalPeriods = 100

# Defines if a linear spacing or logarithmic spacing between Tmin and Tmax
# is used. The default is a linear spacing. The logarithmic spacing will fail
# if either Tmin or Tmax is 0.
wfparam.naturalPeriods.log = false

# Specifies the minimum period (Tmin) in seconds for computation of the
# relative displacement lastic response spectrum.
wfparam.Tmin = 0

# Specifies the maximum period (Tmax) in seconds for computation of the
# relative displacement elastic response spectrum.
wfparam.Tmax = 5

# Enables/disables after shock removal.
wfparam.afterShockRemoval = true

# Enables/disables pre-event cut-off. A hardcoded sta/lta algorithm
# (with sta=0.1s, lta=2s, sta/lta threshold=1.2) is run on the time window
# defined by (expected_P_arrival_time - 15 s). The pre-event window is hence
# defined as [t(sta/lta =1.2) - 15.5 s, t(sta/lta =1.2) - 0.5 s].
wfparam.eventCutOff = 1

# Specifies the filter order of the general filter.
wfparam.filter.order = 4

# Magnitude dependent filter table. The format is
# "mag1:fmin1;fmax1, mag2:fmin2;fmax2, mag3:fmin3;fmax3".
# If a magnitude falls between two configured magnitudes the filter
# of the lower magnitude is then used. No interpolation takes place.
# Magnitude outside the configured range are clipped to the lowest/highest
# value.
# Frequency values are given as simple positive doubles (Hz is assumed) or
# with suffix "fNyquist" which is then multiplied by the Nyquist frequency
# of the data to get the final corner frequency.
wfparam.magnitudeFilterTable = 0:0.2;0.8fNyquist,\
                               3:0.1;0.8fNyquist,\
                               5:0.05;0.8fNyquist,\
                               7:0.025;0.8fNyquist

# Specifies the frequency of the general hi-pass filter. If this parameter is
# equal to 0 the hi-pass filter is not used. If suffix "fNyquist" is used
# then the value is multiplied by the Nyquist frequency of the data to get
# the final corner frequency of the filter.
wfparam.filter.loFreq = 0.025

# Specifies the frequency of the general lo-pass filter. If this parameter
# is equal to 0 the lo-pass filter is not used. If suffix "fNyquist" is
# used then the value is multiplied by the Nyquist frequency of the data to
# get the final corner frequency of the filter.
wfparam.filter.hiFreq = 40

# Specifies the filter order of the post-deconvolution filter.
wfparam.pd.order = 4

# Specifies the frequency of the post-deconvolution hi-pass filter.
# If this parameter is equal to 0 the hi-pass filter is not used. If
# suffix "fNyquist" is used then the value is multiplied by the Nyquist
# frequency of the data to get the final corner frequency of the filter.
wfparam.pd.loFreq = 0

# Specifies the frequency of the post-deconvolution lo-pass filter.
# If this parameter is equal to 0, the lo-pass filter is disabled.
# If suffix "fNyquist" is used then the value is multiplied by the Nyquist
# frequency of the data to get the final corner frequency of the filter.
wfparam.pd.hiFreq = 0

# Enables/disables deconvolution and thus the usage of wfparam.pd.order,
# wfparam.pd.loFreq and wfparam.pd.hiFreq. If a channel does not provide full
# response information it is not used for processing.
wfparam.deconvolution = true

# Specifies the interval in seconds to check/start scheduled operations.
wfparam.cron.wakeupInterval = 10

# Specifies the maximum allowed idle time of a process before removed.
# The idle time is calculated if no further processing is scheduled and
# computes as: [now]-lastRun.
wfparam.cron.eventMaxIdleTime = 3600

# Enables/disables updating of a cron log file. This file will be created under
# ~/.seiscomp3/log/[appname].sched
# and contains information about the scheduled events and the processing queue.
# The file is updated each n seconds, where n = wfparam.cron.wakeupInterval.
wfparam.cron.logging = true

# Specifies the delay in seconds to delay processing if a new authoritative
# origin arrives for an event.
wfparam.cron.updateDelay = 60

# Specifies a list of delay times in seconds relative to event time to trigger
# the processing. When the first origin of an event arrives this list is used
# to construct the crontab for this event.
wfparam.cron.delayTimes = ""

# Specifies the initial acquisition timeout. If the acquisition source
# (eg Arclink) does not respond within this threshold with waveforms,
# the request is discarded.
wfparam.acquisition.initialTimeout = 30

# Specifies the acquisition timeout when waveforms are being transfered.
# If no new waveforms arrive within this threshold, the request is aborted.
# This is important if a Seedlink connection is configured which can block
# the application for a very long time if at least one requested channel has
# no data. Seedlink does not finished the request until all data has been sent.
# When data will arrive for a particular channel is not known.
wfparam.acquisition.runningTimeout= 2

# Enables generation of short output event id's.
wfparam.output.shortEventID = false

# Enables/disables the output of processed waveforms.
wfparam.output.waveforms.enable = false

# Specifies the waveform output path. This parameter is only used if
# wfparam.output.waveforms.enable is true.
wfparam.output.waveforms.path = @LOGDIR@/shakemaps/waveforms

# Enables/disables the creation of an event directory (named with eventID) when
# storing the processed waveforms. This parameter is only used if
# wfparam.output.waveforms.enable is true.
wfparam.output.waveforms.withEventDirectory = false

# Enables/disables the output of spectra (psa, drs). The output format is a
# simple ascii file where the first column is the period and the second column
# the corresponding value.
wfparam.output.spectra.enable = false

# Specifies the spectra output path. This parameter is only used if
# wfparam.output.spectra.enable is true.
wfparam.output.spectra.path = @LOGDIR@/shakemaps/spectra

# Enables/disables the creation of an event directory (named with eventID)
# when storing the spectra. This parameter is only used if
# wfparam.output.spectra.enable is true.
wfparam.output.spectra.withEventDirectory = false

# Enables/disables ShakeMap XML output.
wfparam.output.shakeMap.enable = true

# Specifies the ShakeMap XML output path. This is only used if
# wfparam.output.shakeMap.enable is set to true.
wfparam.output.shakeMap.path = @LOGDIR@/shakemaps

# Specifies a script that is called whenever a new ShakeMap XML is available.
# The script is called with 5 parameters:
#   * EventID
#   * modified EventID for ShakeMap output
#   * path to event directory (where input/event.xml and input/event_dat.xml lives)
# No files are deleted by the application. The ownership goes to the
# called script.
#wfparam.output.shakeMap.script = ...

# Enables/disables synchronous or asynchronous script calls. If enabled,
# be careful not to spend too much time in the script. The application is
# blocked while the script is running.
wfparam.output.shakeMap.synchronous = true

# If enabled the maximum PGV, PGA, PSA03, PSA10 and PSA30 of both horizontal
# components is used in the final output. Otherwise each component is saved.
wfparam.output.shakeMap.maximumOfHorizontals = false

# The XML encoding string written to the Shakemap XML file.
wfparam.output.shakeMap.encoding = "UTF-8"

# Enables messaging output which creates objects of the StrongMotionParameters
# data model extension (defined by SED) and sends them to scmaster. In order to
# save the objects to the database, scmaster needs to load the dmsm plugin and
# the corresponding database schema must be applied.
# The default message group is AMPLITUDE. To change this group redefine
# connection.primaryGroup.
wfparam.output.messaging = false

# Defines the magnitude tolerance to completely reprocess an event with respect
# to the last state.
wfparam.magnitudeTolerance = 0.5
